{"version":3,"file":"static/js/477.c29228c6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\",\"contactform\":\"ContactForm_contactform__1wuxY\"};","export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectUser = state => state.auth.user;\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\nexport const selectIsFetching = state => state.auth.isFetching;\n","import style from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setcontactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n\n    setcontactName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setcontactName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={style.contactform}>\n      <form type=\"submit\" onSubmit={handleSubmit}>\n        <label className={style.label}>\n          Name\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={contactName}\n          />\n        </label>\n        <label className={style.label}>\n          Number\n          <input\n            className={style.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </label>\n\n        <button type=\"submit\" className={style.btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\"};","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectStatusFilter } from 'redux/selectors';\nimport style from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filtered = useSelector(selectStatusFilter);\n\n  const normalizedFilter = filtered.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name} : {number}\n          </p>\n          {\n            <button\n              className={style.button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.protoTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.string),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"highlight\":\"Filter_highlight__6Wc8Z\",\"filterinput\":\"Filter_filterinput__Rk5X8\"};","import style from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectStatusFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const onChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <div>\n      <h4 className={style.highlight}>Find contacts by name</h4>\n      <input\n        className={style.filterinput}\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={onChange}\n        placeholder=\"Please write name here\"\n      ></input>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  OnChange: PropTypes.func,\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'start',\n      }}\n    >\n      <ContactForm />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && (\n        <b\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: '10px',\n          }}\n        >\n          Loading...\n        </b>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","selectError","error","useSelector","dispatch","useDispatch","useState","contactName","setcontactName","number","setNumber","handleChange","event","target","name","value","className","style","type","onSubmit","preventDefault","some","window","alert","addContact","pattern","title","required","onChange","ContactList","normalizedFilter","toLowerCase","filteredContacts","includes","useEffect","fetchContacts","map","id","onClick","deleteContact","protoTypes","PropTypes","onDeleteContact","e","setFilter","placeholder","Contacts","display","flexDirection","alignItems","marginLeft","marginRight","marginTop","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}